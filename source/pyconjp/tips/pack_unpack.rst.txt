.. _Pythonチュートリアル 5.3.: https://docs.python.org/ja/3/tutorial/datastructures.html#tuples-and-sequences

閑話🍵： パック／アンパック
============================================================

.. revealjs-section::
    :data-background-color: #002b36

パック／アンパック
--------------------------------------------------

.. revealjs-section::
    :data-background-color: #002b36

* タプルのパック： **詰める** （パッキング）
* シーケンスのアンパック：中の物を **取り出す** （本編で紹介済み）

`Pythonチュートリアル 5.3.`_

タプルのパック (tuple packing)
--------------------------------------------------

.. revealjs-section::
    :data-background-color: #002b36

.. code-block:: python

    >>> t = 12345, 54321, "hello!"
    >>> type(t)
    <class 'tuple'>
    >>> t
    (12345, 54321, 'hello!')

逆の演算がシーケンスのアンパック

タプルの肝は **カンマ**
--------------------------------------------------

    タプルを書くときは必ずしも丸括弧で囲まなくてもいい （`Pythonチュートリアル 5.3.`_）

.. revealjs-section::
    :data-background-color: #002b36

.. code-block:: python

    >>> 1, 2
    (1, 2)
    >>> 1,
    (1,)

複数の値を返す関数はタプルを返している！
------------------------------------------------------------

.. revealjs-section::
    :data-background-color: #002b36

.. code-block:: python

    >>> def f():
    ...     return 42, "spam"
    ...
    >>> type(f())
    <class 'tuple'>

カッコつけずに書いたタプルで **パック**！

Pythonでは複数同時の代入ができる
--------------------------------------------------

.. revealjs-section::
    :data-background-color: #002b36

.. code-block:: python

   >>> taki = "瀧"
   >>> mitsuha = "三葉"
   >>> taki, mitsuha = mitsuha, taki
   >>> taki
   '三葉'
   >>> mitsuha
   '瀧'

「「入れ替わってるーー！！」」

さら知り🏃‍♂️：複数同時代入の裏にパック／アンパック
------------------------------------------------------------

.. revealjs-section::
    :data-background-color: #002b36

.. code-block:: python

    taki, mitsuha = mitsuha, taki

1. 右辺でタプルのパック ``("三葉", "瀧")``
2. シーケンスのアンパック

詳しくは『`Effective Python 第2版`_』項目6 をどうぞ！
