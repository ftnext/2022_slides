秘密1：AWSドリルを参考にしました
============================================================

ご存知ですか？ builders.flash
--------------------------------------------------

https://aws.amazon.com/jp/builders-flash/

builders.flash
--------------------------------------------------

* *AWS のデベロッパー向けウェブマガジン*
* ソリューションアーキテクトの皆様による **豊富な記事**
* メールメンバーに登録すると、特典（AWSのクーポン）いただけます

お役立ち Twitter Bot を作りながら学ぶ AWS ドリル
--------------------------------------------------

金澤さん（a.k.a `@ketancho <https://twitter.com/ketancho>`_ さん）による毎月連載（2022年1月〜）

    Twitter Bot を開発・運用しながら AWS を学んでいただきます。（第1回より）

現在5️⃣回連載
--------------------------------------------------

* `第1回 <https://aws.amazon.com/jp/builders-flash/202201/aws-drill-twitter-bot-1/>`_ AWS Lambda・Amazon EventBridge・AWS CloudShell
* `第2回 <https://aws.amazon.com/jp/builders-flash/202202/aws-drill-twitter-bot-2/>`_ Amazon DynamoDB・AWS IAM
* `第3回 <https://aws.amazon.com/jp/builders-flash/202203/aws-drill-twitter-bot-3/>`_ AWS Systems Manager (Parameter Store)

.. revealjs-break::

* `第4回 <https://aws.amazon.com/jp/builders-flash/202204/aws-drill-twitter-bot-4/>`_ Amazon SNS
* `第5回 <https://aws.amazon.com/jp/builders-flash/202205/aws-drill-twitter-bot-5/>`_ Amazon Translate
* 今後も楽しみにしています！

harmonizer_botは **初回** の内容で作りました
--------------------------------------------------

* 第3回も一部参照しています
* ドリル4回分残しているので、拡張しがいがあって最高！

AWSドリル第1回で作るTwitter Bot
============================================================

https://aws.amazon.com/jp/builders-flash/202201/aws-drill-twitter-bot-1/

Twitter Botの仕組み
--------------------------------------------------

* Bot用のTwitterアカウントを用意
* Twitter APIを介すと、Twitterアカウントにツイートさせられる
* つまり、Twitter Bot＝ **Bot用アカウントでツイートするプログラム**

Bot用Twitterアカウントの設定
--------------------------------------------------

* Twitter API **v2** の Essential access は申請不要で使える！
* Bot用アカウントでdeveloper accountを登録し、APIのキーやトークンを払い出す
* 詳しくは https://developer.twitter.com/en/docs/twitter-api/getting-started/getting-access-to-the-twitter-api

ツイートのエンドポイント
--------------------------------------------------

.. code-block::

    POST https://api.twitter.com/2/tweets

* ドリルに沿って、OAuth 1.0a User Contextを使っています
* https://developer.twitter.com/en/docs/twitter-api/tweets/manage-tweets/api-reference/post-tweets

ツイートするプログラム（Python）
--------------------------------------------------

.. code-block:: python

    import os
    from requests_oauthlib import OAuth1Session

    # 環境変数の読み込み
    consumer_key = os.getenv("TWITTER_API_KEY")
    client_secret = os.getenv("TWITTER_API_KEY_SECRET")
    access_token = os.getenv("TWITTER_API_ACCESS_TOKEN")
    access_token_secret = os.getenv("TWITTER_API_ACCESS_TOKEN_SECRET")

    oauth = OAuth1Session(consumer_key, client_secret, access_token, access_token_secret)

    payload = {"text": "#アイの歌声を聴かせて 面白いからみんな観て"}
    response = oauth.post("https://api.twitter.com/2/tweets", json=payload)

Twitter BotのプログラムをAWSで動かす
============================================================

ツイートするプログラムを、定期的に自動で実行。それすなわちBot

Twitter Botの最小構成は2つのサービス
--------------------------------------------------

* AWS Lambda
* Amazon EventBridge

.. 図をここに入れるかも

AWS Lambda
--------------------------------------------------

* 先のツイートするプログラムをLambda関数にする

  * :file:`lambda_function.py` の ``lambda_handler`` 関数として実装（デフォルト設定に合わせる）

* （手に馴染んだ言語に書き換えても素振りになるかもしれませんね）

ツイートするLambda関数の例
--------------------------------------------------

.. code-block:: python

    import os
    from requests_oauthlib import OAuth1Session

    consumer_key = os.getenv("TWITTER_API_KEY")
    client_secret = os.getenv("TWITTER_API_KEY_SECRET")
    access_token = os.getenv("TWITTER_API_ACCESS_TOKEN")
    access_token_secret = os.getenv("TWITTER_API_ACCESS_TOKEN_SECRET")

    oauth = OAuth1Session(consumer_key, client_secret, access_token, access_token_secret)

    def lambda_handler(event, context):
        payload = {"text": "#アイの歌声を聴かせて 面白いからみんな観て"}
        response = oauth.post("https://api.twitter.com/2/tweets", json=payload)

Amazon EventBridge
--------------------------------------------------

* Lambda関数はevent（JSON）を受け取ると実行される（``lambda_handler`` 関数の第1引数）
* EventBridgeでeventを **発生** させる

  * 定期的に、Lambda関数に対して（👉Lambda関数の日次実行）

こうして、毎朝カウントダウンするBotが爆誕した🎉
============================================================

.. raw:: html

    <blockquote class="twitter-tweet" data-align="center" data-dnt="true"><p lang="ja" dir="ltr">3/21は <a href="https://twitter.com/hashtag/%E3%82%A2%E3%82%A4%E3%81%AE%E6%AD%8C%E5%A3%B0%E3%82%92%E8%81%B4%E3%81%8B%E3%81%9B%E3%81%A6?src=hash&amp;ref_src=twsrc%5Etfw">#アイの歌声を聴かせて</a> 公開から144日目です。<br>今日も、元気で、頑張るぞっ、おーっ</p>&mdash; sing_a_bot_of_harmony (@harmonizer_bot) <a href="https://twitter.com/harmonizer_bot/status/1505680602942492674?ref_src=twsrc%5Etfw">March 20, 2022</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

LT：アイの歌声を聴かせて応援Botの秘密はね、最後じゃないけど明かされるんだよ
--------------------------------------------------------------------------------

* 秘密1： **AWSドリル** を参考にしました
* 秘密2
* 秘密3

NEXT：1日に複数回つぶやかせるには？🤔
--------------------------------------------------

* Lambda関数をつぶやきの種類だけ作る？
* 1つのLambda関数の中で、この時間はこのつぶやきというロジックを書く？
