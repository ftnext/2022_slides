サイクルを回すために
========================================

情報収集➡️モデル化➡️検証というプログラミング学習サイクルを回すためのtipsを紹介

1. 書くんだ！✍️
========================================

Just Write It!

**仮説を検証** するためにプログラムを書こう
--------------------------------------------------

* 教材を読んで・視聴して理解
* + 書いて、理解＝仮説を検証しよう（理解を深める第一歩）

.. 元ネタを紹介してもいいかも

2. 写経しながら **考える**
========================================

* 写経＝プログラムをまねて入力＝書き写す
* 情報収集の方法の1つ

『`エンジニアの知的生産術`_』より（第1章）
--------------------------------------------------

    書き写しながら、「あれ、これ前にも出てきたな」とか「いつものパターンに似ているけどちょっと違うな」とか考えることが大事です

写経しながら考える：nikkieの場合
--------------------------------------------------

* 「 **こんな書き方できるのか！** 」という気付き
* モデル（自分の理解）の更新につながる（誤解していた、少し深く分かった）

『`エンジニアの知的生産術`_』第1章 参考
--------------------------------------------------

* なぜこうなっている？ こう書き換えたら？ 写経しながら控えておく
* 分からないことも書き出しましょう

「コピペでよくない？」
========================================

Google検索などして見つけたサンプルコードをコピー & ペースト

nikkieとコピペ
--------------------------------------------------

* コピペすればサンプルコードは動く
* ぶっちゃけ、入門時はよくやっていました
* サンプルコードを組合せたら動かなくなったぞ！？

nikkieの意見：コピペはオススメしません
--------------------------------------------------

* 情報収集➡️モデル化➡️検証のサイクルから **遠ざかる** 感覚
* コピペはモデル化をスキップする
* そのため、動かない時に仮説が出せず、直しづらい（ご認識を！）

nikkieの意見：コピペしないを増やしていきましょう
--------------------------------------------------

* コピペをすると早く解決できるが、モデル化が薄くなりがち
* コピペしないと **時間はかかるが、理解が深まる**

  * 得たモデルは次の同様のケースに活きる

.. https://github.com/ftnext/2019_slides/blob/master/django_girls_Nov_copy_paste/PITCHME.md

3. 一歩一歩
========================================

* 「写経とかコピペしないとか、プログラミングって泥臭くない？」
* nikkieの意見：着実に一歩一歩積み上げていきましょう

学習曲線は直線ではない
--------------------------------------------------

.. https://en.wikipedia.org/wiki/Learning_curve

（プログラミングに限らず）何かを身につけるのは簡単な道のりではないと思っています

オススメの考え方：過去の自分と比較しよう
--------------------------------------------------

* 例：今日は改行を含んだprintができるようになったぞ！🙌
* 情報収集➡️モデル化➡️検証を繰り返し、モデルをちょっとずつじわじわと更新していく

4. ひとつの教材を極め抜け
========================================

* 一歩一歩進む以上、時間はかかるもの
* 紹介した教材、あれもこれもは現実的でない

1つの教材でいい、それにまず精通しよう
--------------------------------------------------

* 入門教材を1つ選んで絞ろう
* 1回目では全ては理解できないもの。何周もしよう
* 分からないところがあってもOK。分かる瞬間は、未来で待ってます

先の話：ひとつの教材を極め抜いたら
--------------------------------------------------

* 全てを網羅した教材はない
* 極め抜いた核に、他の教材を **つまみ読みして補完** していく
* 読み込んだ1教材 & たくさんの教材の必要に応じたつまみ読み

.. 元ネタを紹介してもいいかも

One more thing: stapyで学んだこと
========================================

みんなのPython勉強会 代表 阿久津さん提唱 **Python学習のTIPs**

.. _Python学習のTIPs: https://www.slideshare.net/TakeshiAkutsu/python-in-3-intro/14

stapy発 `Python学習のTIPs`_
--------------------------------------------------

* Textbook：書籍
* Internet：インターネット上のリソース
* People： **コミュニティ** 、勉強会

People!!
--------------------------------------------------

* このトークではTextbookやInternetをいくつか紹介
* Peopleという側面もある！

  * Pythonをきっかけに人とつながれる
  * 知見を共有したり、互いに学べる
