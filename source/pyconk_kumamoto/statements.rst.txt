Pythonにおける文
========================================

用語集「文」
========================================

    A statement is part of a suite (a “block” of code).

`Python用語集 文 (en) <https://docs.python.org/3/glossary.html#term-statement>`_

文はスイート (コードの"ブロック") の一部です。（nikkie訳）

文に関する用語
--------------------------------------------------

* 節
* ヘッダ
* スイート

.. _8. 複合文: https://docs.python.org/ja/3/reference/compound_stmts.html#compound-statements

今回は「複合文」にフォーカス
--------------------------------------------------

    複合文には、他の文 (のグループ) が入ります

言語リファレンス `8. 複合文`_

複合文の例
--------------------------------------------------

.. literalinclude:: ../../samplecode/reintro/roland.py
    :language: python
    :lines: 5-9
    :linenos:

複合文のイメージは制御フロー
--------------------------------------------------

    複合文は、中に入っている他の文の実行の制御に何らかのやり方で影響を及ぼします。（ `8. 複合文`_）

``if`` 文だと分岐（実行する／しない）

先の用語は複合文の構成要素
========================================

* 節
* ヘッダ
* スイート

節
--------------------------------------------------

    複合文は、一つ以上の '節 (clause)' からなります。（ `8. 複合文`_）

節の例 1/2
--------------------------------------------------

.. literalinclude:: ../../samplecode/reintro/roland.py
    :language: python
    :lines: 5-9
    :linenos:
    :emphasize-lines: 2-3

節の例 2/2
--------------------------------------------------

.. literalinclude:: ../../samplecode/reintro/roland.py
    :language: python
    :lines: 5-9
    :linenos:
    :emphasize-lines: 4-5

節の構成要素
--------------------------------------------------

    節は、ヘッダと 'スイート (suite)' からなります。（ `8. 複合文`_）

ヘッダ
--------------------------------------------------

    各節のヘッダは一意に識別するキーワードで始まり、コロンで終わります。（ `8. 複合文`_）

（キーワードについては後述します。例えば ``if`` や ``else`` です）

ヘッダの例
--------------------------------------------------

.. literalinclude:: ../../samplecode/reintro/roland.py
    :language: python
    :lines: 5-9
    :linenos:
    :emphasize-lines: 2,4

スイート
--------------------------------------------------

    | スイートは、ヘッダがある行のコロンの後にセミコロンで区切って置かれた一つ以上の単純文、
    | または、ヘッダに続く行で一つ多くインデントされた文の集まりです。（ `8. 複合文`_）

スイートの例
--------------------------------------------------

.. literalinclude:: ../../samplecode/reintro/roland.py
    :language: python
    :lines: 5-9
    :linenos:
    :emphasize-lines: 3,5

スイートには複合文をネストできる
--------------------------------------------------

.. code-block:: python
    :lineno-start: 2
    :emphasize-lines: 2-3

    if name == "ローランド":
        for _ in range(3):
            print("俺か")
    else:
        print("俺以外か")

小まとめ🥟：Pythonにおける文
========================================

* 複合文は **節** （ヘッダとスイート）からなる
* コロンはヘッダを示している！
* インデントはスイートを示している！

文の補足：用語集には続きが
========================================

    A statement is either an expression or one of several constructs with a keyword,

文は、式または、キーワードから構成されるものです（nikkie訳）

キーワード
========================================

* いくつかの **トークン**
* 例

  * ``if``
  * ``else``
  * ``for``
  * ``def``

キーワードは、予約語
------------------------------------------------

.. code-block:: python

    >>> if = 1231  # 変数として使えません
      File "<stdin>", line 1
        if = 1231
           ^
    SyntaxError: invalid syntax

.. _Python用語集 式: https://docs.python.org/ja/3/glossary.html#term-expression

文の構成要素：式
========================================

    何かの値と評価される、一まとまりの構文
    (A piece of syntax which can be evaluated to some value.)

`Python用語集 式`_

用語集「式」の続き
------------------------------------------------

    言い換えると、式とは（中略）値を返す式の要素の積み重ねです。
    (In other words, an expression is an accumulation of expression elements [...] which all return a value.)

`Python用語集 式`_

式の例
------------------------------------------------

* ``108`` （リテラル）は式
* ``1 + 2`` は式（演算子を使用）
* 関数呼び出しも式（ ``print("だんだんな〜")`` ）

式自体で文
------------------------------------------------

以下の例の関数呼び出しは式であり、文でもある

.. literalinclude:: ../../samplecode/reintro/roland.py
    :language: python
    :lines: 5-9
    :linenos:
    :emphasize-lines: 3,5
