Part I. Pythonにおける文
========================================

用語集「文」
========================================

    A statement is part of a suite (a “block” of code).

`Python用語集 文 (en) <https://docs.python.org/3/glossary.html#term-statement>`_

文はスイート (コードの"ブロック") の一部です。（nikkie訳）

.. _8. 複合文: https://docs.python.org/ja/3/reference/compound_stmts.html#compound-statements

今回は「複合文」にフォーカス
--------------------------------------------------

    複合文には、他の文 (のグループ) が入ります

言語リファレンス `8. 複合文`_

複合文の例（ ``if`` 文）
--------------------------------------------------

.. literalinclude:: ../../samplecode/reintro/roland.py
    :language: python
    :lines: 5-9
    :linenos:

複合文のイメージは制御フロー
--------------------------------------------------

    複合文は、中に入っている他の文の実行の制御に何らかのやり方で影響を及ぼします。（ `8. 複合文`_）

``if`` 文だと分岐（実行する／しない）

複合文の構成要素
========================================

* 節
* ヘッダ
* スイート

節
--------------------------------------------------

    複合文は、一つ以上の '節 (clause)' からなります。（ `8. 複合文`_）

例の ``if`` 文を構成する節　その1
--------------------------------------------------

.. literalinclude:: ../../samplecode/reintro/roland.py
    :language: python
    :lines: 5-9
    :linenos:
    :emphasize-lines: 2-3

例の ``if`` 文を構成する節　その2
--------------------------------------------------

.. literalinclude:: ../../samplecode/reintro/roland.py
    :language: python
    :lines: 5-9
    :linenos:
    :emphasize-lines: 4-5

節の構成要素
--------------------------------------------------

    節は、ヘッダと 'スイート (suite)' からなります。（ `8. 複合文`_）

ヘッダ
--------------------------------------------------

    各節のヘッダは一意に識別するキーワードで始まり、コロンで終わります。（ `8. 複合文`_）

キーワード
--------------------------------------------------

* いくつかの **トークン** （字句）
* 例

  * ``if``
  * ``else``
  * ``for``
  * ``def``

ヘッダはキーワードで始まりコロンで終わる
--------------------------------------------------

.. literalinclude:: ../../samplecode/reintro/roland.py
    :language: python
    :lines: 5-9
    :linenos:
    :emphasize-lines: 2,4

スイート
--------------------------------------------------

    スイートは、[略]、または、ヘッダに続く行で一つ多くインデントされた文の集まりです。（ `8. 複合文`_）

スイートはインデントされた文の集まり
--------------------------------------------------

.. literalinclude:: ../../samplecode/reintro/roland.py
    :language: python
    :lines: 5-9
    :linenos:
    :emphasize-lines: 3,5

スイートはインデントされた文の集まり（2文以上）
--------------------------------------------------

.. code-block:: python
    :linenos:
    :emphasize-lines: 3-4

    name = input("名前を入力してください: ")
    if name == "ローランド":
        print("俺")
        print("か")
    else:
        print("俺以外か")

スイート
--------------------------------------------------

    [先に紹介した形式] のスイートに限り、さらに複合文をネストできます（ `8. 複合文`_）

複合文は **再帰** 的！（複合文のスイートに別の複合文）

スイートに複合文をネストする例
--------------------------------------------------

.. code-block:: python
    :linenos:
    :emphasize-lines: 3-4

    name = input("名前を入力してください: ")
    if name == "ローランド":
        for _ in range(3):
            print("俺か")
    else:
        print("俺以外か")

小まとめ🥟：Pythonにおける文
========================================

* 複合文は **節** （ヘッダとスイート）からなる
* コロンはヘッダを示している！
* インデントはスイートを示している！

文の補足：用語集には続きが
========================================

    A statement is either an expression or one of several constructs with a keyword, such as if, while or for.

文は、式または、 if, while, for のようなキーワードから構成されるものです（nikkie訳）

文はどちらか
------------------------------------------------

1. 式 (an expression)
2. キーワードから構成されるもの (one of several constructs with a keyword)

キーワードの補足：予約語
========================================

.. code-block:: python

    >>> if = 1231  # 変数として使えません
      File "<stdin>", line 1
        if = 1231
           ^
    SyntaxError: invalid syntax

.. _Python用語集 式: https://docs.python.org/ja/3/glossary.html#term-expression

文の構成要素の1つ：式とは
========================================

    何かの値と評価される、一まとまりの構文
    (A piece of syntax which can be evaluated to some value.)

`Python用語集 式`_

用語集「式」の続き
------------------------------------------------

    言い換えると、式とは [中略] 値を返す式の要素の積み重ねです。
    (In other words, an expression is an accumulation of expression elements [...] which all return a value.)

`Python用語集 式`_

式の定義にも **再帰** ！

.. _6. 式: https://docs.python.org/ja/3/reference/expressions.html

式の要素とは
------------------------------------------------

* 式の要素の1つ、リテラル（ `6. 式`_ 6.2.2）
* 例：整数 ``108`` はリテラル 👉 ``108`` は式

さらに、式の要素
------------------------------------------------

* 式の要素の1つ、演算子（ `6. 式`_ 6.7）
* 例： ``33 - 4`` は式（リテラル、演算子、リテラル）
* 式の要素を組合せて、別の式ができる（再帰）

もう少し、式の要素
------------------------------------------------

* 関数呼び出しも、式の要素の1つ（ `6. 式`_ 6.3.4）
* 例： ``print("だんだんな〜")``

式自体で文（用語集で文は式のケース）
------------------------------------------------

以下の例の関数呼び出しは文でもある（スイートとして書けている）

.. literalinclude:: ../../samplecode/reintro/roland.py
    :language: python
    :lines: 5-9
    :linenos:
    :emphasize-lines: 3,5

文の補足、終わり！
--------------------------------------------------

1. ✅ Pythonにおける文
2. 文を定義する（拡張BNF記法）
3. 文の定義を味わう
