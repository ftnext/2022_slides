機械学習を使った自然言語処理の例
============================================================

* タスク： **テキスト分類**
* ニュースグループの投稿をカテゴリに分類する

脱線：ニュースグループって？
--------------------------------------------------

* ネットニュースのグループ
* ネットニュース≒電子掲示板
* 「今で言うTwitterみたいなものね」

ニュースグループの投稿をカテゴリに分類
--------------------------------------------------

* scikit-learnのチュートリアル `Working With Text Data <https://scikit-learn.org/stable/tutorial/text_analytics/working_with_text_data.html>`_

  * 機械学習アルゴリズムや評価用ツールが集まったライブラリ（📚[3] 1.3.2）

機械学習でモデルの訓練に必要なものは
--------------------------------------------------

* データ
* 機械学習アルゴリズム

.. revealjs-break::

* データ：ニュースグループの投稿（`sklearn.datasets.fetch_20newsgroups`）
* 機械学習アルゴリズム：サポートベクターマシン（`sklearn.svm.SVC`）

データから特徴量を抽出
--------------------------------------------------

* **テキストを数値に変換** して特徴量とする
* 投稿を数値を並べて表す

  * 今回は数値として単語の *TFIDF* を使うとする

TFIDFを使った特徴量のイメージ
--------------------------------------------------

* 全投稿に含まれる単語の数（約35000）だけ **数値を並べる**

  * 1つ1つの投稿は、35000個の数値の並びで表される（ベクトル）

.. revealjs-break::

* 投稿に含まれる単語はTFIDFの値、含まれない単語は0
* 例: `'OpenGL on the GPU is fast'`

.. code-block:: txt

    gpu god opengl  ... (35000語分並ぶ)
    0.67    0   0.60

TFIDFのイメージ
--------------------------------------------------

* TFIDFは正の小数（要裏とり）
* TFIDFが大きいほど、その投稿を *特徴づける* 単語（詳しくはAppendixへ TODO）

  * 先の例だと、openglやgpuはその投稿にしか現れないということ

モデルの気持ち
--------------------------------------------------

* このカテゴリは、これらの語のTFIDFが高いぞ！
* 別のカテゴリは、別の語たちのTFIDFが高いぞ！
* ただし、機械学習は、ルールを適用した結果、 **間違える可能性** がついて回ります

コード例
--------------------------------------------------

TODO includeして示す TfidfVectorizerなど（ファイルへのリンクも埋め込みたい）

英語と日本語の違い
--------------------------------------------------

* 英語は空白で単語が区切られている

  * そのまま `sklearn.feature_extraction.text.TfidfVectorizer` に入力できる

* 日本語ではまず単語を区切る必要がある（*分かち書き*）👉この後の例
