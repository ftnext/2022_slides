BERTの利用例：感情分析タスク
============================================================

* 『吾輩は猫である』の感情分析をBERTでやってやりましょう
* 感情分析タスクは、機械学習の **二値分類** （2つのカテゴリに分類）

コードはこれだけ！
--------------------------------------------------

.. code-block:: python

    from transformers import pipeline

    nlp = pipeline(
        "sentiment-analysis",
        model="daigo/bert-base-japanese-sentiment",
        tokenizer="daigo/bert-base-japanese-sentiment",
        truncation=True,
    )

    texts = ["吾輩は猫である。", "名前はまだ無い。", "どこで生れたかとんと見当がつかぬ。"]
    for text in texts:
        print(nlp(text))

BERTによる感情分析結果
--------------------------------------------------

.. code-block:: txt

    吾輩は猫である。
    -> [{'label': 'ポジティブ', 'score': 0.9909781217575073}]

    名前はまだ無い。
    -> [{'label': 'ポジティブ', 'score': 0.5273743867874146}]
    （ネガティブが0.47なので、自信がない）

    どこで生れたかとんと見当がつかぬ。
    -> [{'label': 'ネガティブ', 'score': 0.9475129842758179}]

コードの裏で行われていること
--------------------------------------------------

* 日本語の感情分析BERTの **ファイル群** をダウンロード

  * https://huggingface.co/daigo/bert-base-japanese-sentiment/tree/main

* ファイル群をモデルや *トークナイザ* として **読み込む**

トークナイザとは
--------------------------------------------------

* 「単語どうしを区切る」役割
* ただし、単語（word）よりも細かい単位（**サブワード**）で区切ることがある

.. code-block:: python

    >>> nlp.tokenizer.encode("吾輩は猫である。")  # トークナイザによりIDの並び
    [2, 7184, 30046, 9, 6040, 12, 31, 8, 3]
    >>> # decodeすると 吾輩/は/猫/で/ある/。 と分かち書きされた

.. 得内座👹「お前もTransformer使いにならないか」
