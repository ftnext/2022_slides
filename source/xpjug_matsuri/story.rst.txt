原点📚ケント・ベック曰く
============================================================

ストーリー（ユーザーストーリー）とは

    顧客に見える機能の単位を使って計画すること

『エクストリームプログラミング（第2版）』7.6

ストーリー、これでいいんだっけ？
============================================================

* 確証が持てなかったポイント「*ストーリーはどこまで詳細にする？*」
* 機能の単位で計画する中で、ストーリーにメモが増えていく📝

『Clean Agile』📘 曰く
--------------------------------------------------

    ユーザーストーリーとは、システムの機能をユーザーの視点から簡潔に記述したもの

第3章「ストーリーとポイント」

.. くどいかもしれないが、早すぎて分からなくなるのを防ぐため、2回繰り返してみる

ここで注目：**簡潔に記述**
--------------------------------------------------

    詳細化を避けるのは鍛錬である。

第3章「ATMのストーリー」📘

なぜ詳細化を避ける？
--------------------------------------------------

    ストーリーをマネジメント可能、スケジュール可能、見積り可能にするためには、「一時的な詳細の欠如」が必要である

第3章「ストーリーとポイント」📘

ストーリーは **会話のプレースホルダー** 📘
============================================================

* Webページ作成中のLorem Ipsumや「ああああ」と同じということ
* 実際のコンテンツは後から挿入される

タイトルタイトルタイトル
--------------------------------------------------

* ああああ
* ああああ
* ああああ

※プレースホルダーの例のスライドです

ストーリーは「あとで会話する」を表す
--------------------------------------------------

    詳細な仕様を決めるのは、ストーリーを開発するときまで可能な限り遅らせたい。

第3章「ストーリーとポイント」📘

『Clean Agile』📘を読んで
------------------------------------------------------------

* 当初の疑問「ストーリーはどこまで詳細にする？」
* ストーリーは **会話のプレースホルダー**
* 💡詳細化はあまり効果的ではない（「ああああ」を「あいうえ」に凝っても・・・）

もう1冊『The Art of Agile Development, 2nd Edition』📖
============================================================

* 英語で読んでます
* `初版は日本語 <https://www.oreilly.co.jp/books/9784873113951/>`_ で入手できます（2009）

AoAD2eより
--------------------------------------------------

    Stories are for planning. They’re the playing pieces of the planning game. That’s it!

8.Planning > Stories

AoAD2e ストーリーとはnikkie訳
--------------------------------------------------

    ストーリーとは計画のためのものです。ストーリーは **計画ゲームをプレーするための駒** で、それだけです！

規模により分類できればいい📖
--------------------------------------------------

* 計画段階（プラクティス The planning game）においての話

  * ストーリーがちょうどいい大きさ・大きすぎる・小さすぎるが分かる状態

* 『Clean Agile』📘の **詳細化を避けると重なる**

計画とは別にストーリーをタスクに分解する📖
--------------------------------------------------

    Use task planning to break the first few stories into development tasks.

8.Planning > Adaptive Planning > How to Create Your Plan

『AoAD 2e』を読んで
--------------------------------------------------

* 当初の疑問「ストーリーはどこまで詳細にする？」
* （やはり）ストーリーは詳細化しない
* **計画とは別にタスクに分解**

ストーリーについての考察
============================================================

* 裏にある考え方はなんだろう？
* 実践を踏まえるとどのようにとらえられるだろう？

再掲：『エクストリームプログラミング（第2版）』
--------------------------------------------------

ストーリー（ユーザーストーリー）とは

    顧客に見える機能の単位を使って計画すること

ポイントは「**計画** すること」
--------------------------------------------------

* ストーリーは *状況* によって詳細化の程度が変わる！
* 計画時は **詳細化を避ける**
* 計画とは別にタスクに変える

詳細化を避ける
--------------------------------------------------

* XPの価値の1つ「シンプルさ」
* 計画時は簡潔な記述に留める

コミュニケーションのリマインダー
--------------------------------------------------

* XPの価値の1つ「コミュニケーション」
* 「会話のプレースホルダー」
* **取り組む際にコミュニケーション** して、詳細化する

詳細化は遅らせたい
--------------------------------------------------

* XPの価値の1つ「フィードバック」
* チームの **学びを反映** して詳細化したい
* 計画時に話した詳細は信用していない（『Clean Agile』📘）

.. ref: 最終責任時点（『アート・オブ・アジャイル デベロップメント』）

計画する中でストーリーにメモを増やしていた私へ
--------------------------------------------------

* 📣「詳細化したい衝動に抵抗するんだ！」
* 計画段階では規模で分類できればいい。詳細化は後で
* 💡ストーリーのプラクティスの鍵は **どこまで詳細化するかチーム内の認識合わせ**

小まとめ🥟：ストーリー
============================================================

* 見積もって **計画** するために、 **一時的に詳細化を避ける**
* 「会話のプレースホルダー」、開発して学びを得た上で直前で詳細化

.. 詳細化しすぎないために：砂時計
